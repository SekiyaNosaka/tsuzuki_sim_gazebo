<?xml version="1.0"?>
<launch>
  <arg name="limited" default="false" doc="If true, limits joint range [-PI, PI] on all joints." />
  <arg name="paused" default="true" doc="Starts gazebo in paused mode" />
  <arg name="gui" default="true" doc="Starts gazebo gui" />
  <arg name="use_sim_time" default="true"
    doc="By setting this to true and publishing /clock in the ROS topic,
         the ROS Time can be changed so that the time is int the past, or the time advances at double speed." />
  <arg name="headless" default="false" doc="Whether renderting is performed or not. (only valid when gui=true)" />
  <arg name="debug" default="false" doc="Whether or not debug messages are displayed." />

  <!-- startup simulated world -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" default="$(find tsuzuki_sim_description)/world/tsuzuki.world"/>
    <arg name="paused" value="$(arg paused)"/>
    <arg name="gui" value="$(arg gui)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
    <arg name="debug" value="$(arg debug)"/>
  </include>

  <!-- send robot urdf to param server -->
  <include file="$(find tsuzuki_sim_description)/launch/ur5_upload.launch">
    <arg name="limited" value="$(arg limited)"/>
  </include>

  <!-- push robot_description to factory and spawn robot in gazebo -->
  <node name="spawn_gazebo_model" pkg="gazebo_ros" type="spawn_model"
    args="-urdf -param robot_description -model robot
          -J robot::shoulder_pan_joint -0.7854
          -J robot::shoulder_lift_joint -1.5708
          -J robot::elbow_joint 1.5708
          -J robot::wrist_1_joint -1.5708
          -J robot::wrist_2_joint -1.5708
          -J robot::wrist_3_joint 0.0"
    respawn="false" output="screen" />
	
  <include file="$(find tsuzuki_sim_description)/launch/controller_utils.launch"/>

  <!-- start this controller -->
  <rosparam file="$(find tsuzuki_sim_description)/controller/manipulator_controller.yaml" command="load"/>
  <node name="manipulator_controller_spawner" pkg="controller_manager" type="controller_manager"
    args="spawn manipulator_controller" respawn="false" output="screen"/>

  <!-- load other controller -->
  <rosparam file="$(find tsuzuki_sim_description)/controller/gripper_controller.yaml" command="load"/>
  <node name="gripper_controller_spawner" pkg="controller_manager" type="controller_manager"
    args="spawn gripper_controller" respawn="false" output="screen"/>

</launch>
